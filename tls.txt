# https://kubernetes.github.io/ingress-nginx/user-guide/tls/

# Self-signed (no chain) server cert
KEY_FILE=server.key
CERT_FILE=server.crt
CERT_NAME=selfsigned-tls
HOST=master
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ${KEY_FILE} -out ${CERT_FILE} -subj "/CN=${HOST}/O=${HOST}" -addext "subjectAltName = DNS:${HOST}" # self-signed (generacja klucza, podpisanie samego siebie, output do plików)
kubectl create secret tls ${CERT_NAME} --key ${KEY_FILE} --cert ${CERT_FILE} # zapisanie do secretu k8s do użytku
# poniżej analogiczne dla typu generic (ale wygodniej uzywać powyższego*)
# kubectl create secret generic selfsigned-generic --from-file=tls.crt=server.crt --from-file=tls.key=server.key
openssl x509 -in server.crt -text -noout # wyświetlanie zawartości certyfikatu

# CA-based Mutual Auth (both server and client certs)
# https://kubernetes.github.io/ingress-nginx/examples/PREREQUISITES/

# root cert
openssl req -x509 -sha256 -newkey rsa:4096 -keyout ca.key -out ca.crt -days 356 -nodes -subj '/CN=k8s training CA' 
# server cert
openssl req -new -newkey rsa:4096 -keyout server.key -out server.csr -nodes -subj "/CN=${HOST}"
openssl x509 -req -sha256 -days 365 -in server.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out server.crt -extfile <(printf "subjectAltName=DNS:${HOST},DNS:www.${HOST}")

# client cert
openssl req -new -newkey rsa:4096 -keyout client.key -out client.csr -nodes -subj '/CN=curl-training'
openssl x509 -req -sha256 -days 365 -in client.csr -CA ca.crt -CAkey ca.key -set_serial 02 -out client.crt

kubectl create secret generic server-and-ca-tls --from-file=tls.crt=server.crt --from-file=tls.key=server.key --from-file=ca.crt=ca.crt
      # -k insecure
curl -vk https://master:30472/test1
        # weryfikacja serwerowego         # kliencki zeby serwer nam zaufał
curl -v --cacert certs/ca.crt --key certs/client.key --cert certs/client.crt https://master:30472/test1

# for mutual authentication between pods (and visualization possible)
# Service Mesh -> istio (de facto standard), Linkerd (quick to setup)
# https://linkerd.io/2.13/getting-started/
